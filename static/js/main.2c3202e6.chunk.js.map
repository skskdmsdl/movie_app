{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","prototype","id","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qSAKA,SAASA,EAAT,GAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SAEKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAGjB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,eAMhBZ,EAAMa,UAAY,CACdC,GAAIC,IAAUC,OAAOC,WACrBhB,KAAMc,IAAUC,OAAOC,WACvBf,MAAOa,IAAUG,OAAOD,WACxBd,QAASY,IAAUG,OAAOD,WAC1Bb,OAAQW,IAAUG,OAAOD,WACzBZ,OAAQU,IAAUI,QAAQJ,IAAUG,QAAQD,YAGjCjB,QC0BAoB,G,kNAlDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAOAC,IAAMC,IAAI,4DAPV,gBAKEJ,EALF,EAIRK,KACEA,KAAQL,OAIZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAEnCQ,QAAQC,IAAIR,GAXF,2C,uDAaZ,WACES,KAAKR,c,oBAEP,WAAU,IAAD,EACuBQ,KAAKX,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAASjB,UAAU,YAAnB,SACGgB,EACC,qBAAKhB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGiB,EAAOd,KAAI,SAAAwB,GAAK,OACf,cAAC,EAAD,CAEEnB,GAAImB,EAAMnB,GACVb,KAAMgC,EAAMhC,KACZC,MAAO+B,EAAM/B,MACbC,QAAS8B,EAAM9B,QACfC,OAAQ6B,EAAMC,mBACd7B,OAAQ4B,EAAM5B,QANT4B,EAAMnB,e,GAlCTqB,IAAMC,YCFxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2c3202e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n// movie컴포넌트는 state를 가지고 있지 않기 때문에 class 컴포넌트일 필요 없음(function 컴포넌트 사용)\r\nfunction Movie({year, title, summary, poster, genres}){\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {/* map은 index argument를 제공함!!  */}\r\n                    {genres.map((genre, index) => ( \r\n                        <li key={index} className=\"genres__genre\">{genre}</li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMovie.prototype = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\n// props가 내가 원하는 props인지 확인하기 위해 prop-types 설치 & import → npm i prop-types\r\nimport PropTypes from \"prop-types\"; \r\n// npm i axios를 통해 axios 설치\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n  };\r\n  // async 비동기(기다려라)\r\n  getMovies = async() => {\r\n    // 함수 내부에 await 뭘 기다리길 원해? axios? 응(완료까지 시간이 좀 필요하기에 await사용)\r\n    // movies.data.data를 아래처럼 나타낼 수 있음\r\n    const { \r\n      data: { \r\n        data: { movies }\r\n      }\r\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    // movies:movies를 movies로 해도 자바스크립트가 이해함\r\n    this.setState({ movies, isLoading: false });\r\n    \r\n    console.log(movies);\r\n  }\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  };\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div> \r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map(movie => (\r\n              <Movie \r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year} \r\n                title={movie.title} \r\n                summary={movie.summary} \r\n                poster={movie.medium_cover_image} \r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  };\r\n}\r\n  \r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n// <App />는 컴포넌트를 의미함\r\n// 컴포넌트는 HTML을 반환하는 함수\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}